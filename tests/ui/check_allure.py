#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Allure
"""
import subprocess
import os
import sys


def check_allure():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –∑–∞–ø—É—Å–∫–∞ Allure"""

    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Allure...")

    # –°–ø–æ—Å–æ–± 1: –ü—Ä–æ—Å—Ç–æ–π –≤—ã–∑–æ–≤
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞: allure --version")
    try:
        result = subprocess.run(["allure", "--version"], capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ Allure –¥–æ—Å—Ç—É–ø–µ–Ω: {result.stdout.strip()}")
            return True
        else:
            print("‚ùå Allure –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç–æ–π –≤—ã–∑–æ–≤")
    except FileNotFoundError:
        print("‚ùå Allure –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH")

    # –°–ø–æ—Å–æ–± 2: –ü–æ–ª–Ω—ã–π –ø—É—Ç—å
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ Allure")
    allure_paths = [
        r"C:\allure\allure-2.35.1\bin\allure.bat",
        r"C:\allure\allure-2.35.1\bin\allure",
        r"C:\allure\bin\allure.bat"
    ]

    for allure_path in allure_paths:
        if os.path.exists(allure_path):
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω Allure: {allure_path}")
            try:
                result = subprocess.run([allure_path, "--version"], capture_output=True, text=True)
                if result.returncode == 0:
                    print(f"‚úÖ Allure —Ä–∞–±–æ—Ç–∞–µ—Ç: {result.stdout.strip()}")
                    return allure_path
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ {allure_path}: {e}")

    # –°–ø–æ—Å–æ–± 3: –ü–æ–∏—Å–∫ –≤ PATH
    print("\n3. –ü–æ–∏—Å–∫ Allure –≤ PATH")
    paths = os.environ.get("PATH", "").split(";")
    for path in paths:
        allure_exe = os.path.join(path, "allure.bat")
        if os.path.exists(allure_exe):
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω –≤ PATH: {allure_exe}")
            try:
                result = subprocess.run([allure_exe, "--version"], capture_output=True, text=True)
                if result.returncode == 0:
                    print(f"‚úÖ Allure —Ä–∞–±–æ—Ç–∞–µ—Ç: {result.stdout.strip()}")
                    return allure_exe
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ {allure_exe}: {e}")

    print("\n‚ùå Allure –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    return False


if __name__ == "__main__":
    check_allure()